apiVersion: v1
kind: Namespace
metadata:
  name: kubesnooze
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubesnooze
  namespace: kubesnooze
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubesnooze
rules:
  - apiGroups: ["apps"]
    resources: ["deployments"]
    verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubesnooze
subjects:
  - kind: ServiceAccount
    name: kubesnooze
    namespace: kubesnooze
roleRef:
  kind: ClusterRole
  name: kubesnooze
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubesnooze
  namespace: kubesnooze
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kubesnooze
  template:
    metadata:
      labels:
        app: kubesnooze
    spec:
      serviceAccountName: kubesnooze
      nodeSelector:
        nodetype: "gpu"
      tolerations:
        - key: "gpu"
          operator: "Exists"
          effect: "NoSchedule"
      volumes:
        - name: system-power
          hostPath:
            path: /sys/power/state
            type: File
      containers:
        - name: kubesnooze
          image: ghcr.io/flomon/kubesnooze:main
          imagePullPolicy: Always
          securityContext:
            privileged: true
          env:
            - name: WATCHED_DEPLOYMENTS
              value: "ai/comfyui,ai/kokoro,ai/ollama,ai/openedai-speech,ai/stablediffusionwebui" # Example value, modify as needed
            - name: TIMER_DURATION
              value: "30m" # Example value, modify as needed
          volumeMounts:
            - name: system-power
              mountPath: /sys/power/state
          resources:
            requests:
              cpu: 10m
              memory: 10Mi
            limits:
              cpu: 100m
              memory: 100Mi
          ports:
            - name: health
              containerPort: 8081
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: health
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: health
            initialDelaySeconds: 5
            periodSeconds: 10
